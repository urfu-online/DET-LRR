version: '3'

networks:
  lrr:

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: ${COMPOSE_PROJECT_NAME}_django_${ENVIRONMENT}
    container_name: ${COMPOSE_PROJECT_NAME}_django_${ENVIRONMENT}
    depends_on:
      - postgres
      - mailhog
    volumes:
      - .:/app
    networks:
      - lrr
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: compose/production.urfu/postgres/Dockerfile
    image: ${COMPOSE_PROJECT_NAME}_postgres
    container_name: ${COMPOSE_PROJECT_NAME}_postgres
    volumes:
      - ${WEB_APP_PATH}/pgdata:/var/lib/postgresql/data
      - ${WEB_APP_PATH}/backups:/backups
      - ./compose/production.urfu/postgres/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
    networks:
        - lrr
    env_file:
      - ./.envs/.local/.postgres
#    ports:
#      - "5432:5432"


  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: lrr_mailhog
    networks:
      - lrr
    ports:
      - "8025:8025"

  redis:
    image: redis:5.0
    container_name: ${COMPOSE_PROJECT_NAME}_redis_${ENVIRONMENT}
    networks:
      - lrr

#  frontend:
#    build: ./frontend
#    command: [ "npm", "start" ]
#    volumes:
#      - ./frontend:/app/frontend
#      - node-modules:/app/frontend/node_modules
#    ports:
#      - "3000:3000"

#  frontend:
#    build: ./lrr/frontend
#    image: lrr_local_frontend
#    container_name: lrr_frontend
#    volumes:
#      - ./lrr/frontend:/app
#      # One-way volume to use node_modules from inside image
#      - ./lrr/frontend/app/node_modules
#    ports:
#      - "3000:3000"
#    environment:
#      - NODE_ENV=development
#    depends_on:
#      - django
#    command: npm start


  celeryworker:
    <<: *django
    image: ${COMPOSE_PROJECT_NAME}_celeryworker_${ENVIRONMENT}
    container_name: ${COMPOSE_PROJECT_NAME}_celeryworker_${ENVIRONMENT}
    depends_on:
      - redis
      - postgres
    networks:
      - lrr
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: ${COMPOSE_PROJECT_NAME}_celerybeat_${ENVIRONMENT}
    container_name: ${COMPOSE_PROJECT_NAME}_celerybeat_${ENVIRONMENT}
    depends_on:
      - redis
      - postgres
    networks:
      - lrr
    ports: []
    command: /start-celerybeat

#  flower:
#    <<: *django
#    image: ${COMPOSE_PROJECT_NAME}_flower_${ENVIRONMENT}
#    container_name: ${COMPOSE_PROJECT_NAME}_flower_${ENVIRONMENT}
#    depends_on:
#      - redis
#      - postgres
#    networks:
#      - lrr
#    command: /start-flower
