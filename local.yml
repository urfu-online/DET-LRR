version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
#  node-modules: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: lrr_local_django
    container_name: lrr_django
    depends_on:
      - postgres
      - mailhog
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: lrr_production_postgres
    container_name: lrr_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    ports:
      - "0.0.0.0:5432:5432"
    env_file:
      - ./.envs/.local/.postgres

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: lrr_mailhog
    ports:
      - "8025:8025"

  redis:
    image: redis:5.0
    container_name: lrr_redis

#  frontend:
#    build: ./frontend
#    command: [ "npm", "start" ]
#    volumes:
#      - ./frontend:/app/frontend
#      - node-modules:/app/frontend/node_modules
#    ports:
#      - "3000:3000"

#  frontend:
#    build: ./lrr/frontend
#    image: lrr_local_frontend
#    container_name: lrr_frontend
#    volumes:
#      - ./lrr/frontend:/app
#      # One-way volume to use node_modules from inside image
#      - ./lrr/frontend/app/node_modules
#    ports:
#      - "3000:3000"
#    environment:
#      - NODE_ENV=development
#    depends_on:
#      - django
#    command: npm start

#  celeryworker:
#    <<: *django
#    image: lrr_local_celeryworker
#    container_name: lrr_celeryworker
#    depends_on:
#      - redis
#      - postgres
#      - mailhog
#    ports: []
#    command: /start-celeryworker
#
#  celerybeat:
#    <<: *django
#    image: lrr_local_celerybeat
#    container_name: lrr_celerybeat
#    depends_on:
#      - redis
#      - postgres
#      - mailhog
#    ports: []
#    command: /start-celerybeat
#
#  flower:
#    <<: *django
#    image: lrr_local_flower
#    container_name: lrr_flower
#    ports:
#      - "5555:5555"
#    command: /start-flower
