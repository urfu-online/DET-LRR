version: '3'
volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
services:
  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: lrr_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start
  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: lrr_production_postgres
    volumes:
      - 'production_postgres_data:/var/lib/postgresql/data'
      - 'production_postgres_data_backups:/backups'
    env_file:
      - ./.envs/.production/.postgres
  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: lrr_production_traefik
    depends_on:
      - django
    volumes:
      - 'production_traefik:/etc/traefik/acme'
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'
      - '0.0.0.0:5555:5555'
  redis:
    image: 'redis:5.0'
  celeryworker:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: lrr_production_celeryworker
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start-celeryworker
  celerybeat:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: lrr_production_celerybeat
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start-celerybeat
  flower:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: lrr_production_flower
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start-flower
