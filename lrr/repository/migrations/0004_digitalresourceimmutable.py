# Generated by Django 4.2.3 on 2023-07-13 07:53

import auto_prefetch
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import uuid


class Migration(migrations.Migration):
    dependencies = [
        ("users", "0001_initial"),
        ("repository", "0003_alter_bookmarkdigitalresource_options_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="DigitalResourceImmutable",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "last_updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Последние обновление"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=1024, verbose_name="Наименование ресурса"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("OK", "Онлайн-курс"),
                            ("EUK", "ЭУК"),
                            (
                                "TEXT_EOR",
                                "Текстовый электронный образовательный ресурс",
                            ),
                            (
                                "MULTIMEDIA_EOR",
                                "Мультимедийный электронный образовательный ресурс",
                            ),
                        ],
                        max_length=30,
                        null=True,
                        verbose_name="Тип ресурса",
                    ),
                ),
                (
                    "source_data",
                    models.CharField(
                        choices=[("MANUAL", "вручную"), ("IMPORT", "импорт")],
                        default="MANUAL",
                        max_length=30,
                        verbose_name="Источник данных",
                    ),
                ),
                (
                    "keywords",
                    models.CharField(
                        blank=True,
                        max_length=6024,
                        null=True,
                        verbose_name="Ключевые слова",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Описание"),
                ),
                (
                    "authors",
                    models.ManyToManyField(
                        blank=True,
                        related_name="authors_digital_resource_immutable",
                        to="users.person",
                        verbose_name="Авторы",
                    ),
                ),
                (
                    "competences",
                    models.ManyToManyField(
                        blank=True,
                        to="repository.competence",
                        verbose_name="Компетенции",
                    ),
                ),
                (
                    "copyright_holder",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="repository.organization",
                        verbose_name="Правообладатель",
                    ),
                ),
                (
                    "digital_resource",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="repository.digitalresource",
                    ),
                ),
                (
                    "edu_programs_tags",
                    models.ManyToManyField(
                        blank=True,
                        to="repository.eduprogramtag",
                        verbose_name="Теги образовательных программ ЭОР",
                    ),
                ),
                (
                    "language",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="repository.language",
                        verbose_name="Язык ресурса",
                    ),
                ),
                (
                    "owner",
                    auto_prefetch.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="owner_digital_resource_immutable",
                        to="users.person",
                        verbose_name="Владелец",
                    ),
                ),
                (
                    "platform",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="repository.platform",
                        verbose_name="Платформа",
                    ),
                ),
                (
                    "result_edu",
                    models.ManyToManyField(
                        blank=True,
                        to="repository.resultedu",
                        verbose_name="Образовательный результат",
                    ),
                ),
                (
                    "subjects_tags",
                    models.ManyToManyField(
                        blank=True,
                        to="repository.subjecttag",
                        verbose_name="Теги дисциплин ЭОР",
                    ),
                ),
            ],
            options={
                "verbose_name": "неизменяемая копия ЭОР",
                "verbose_name_plural": "неизменяемые копии ЭОР",
                "ordering": ["title"],
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
