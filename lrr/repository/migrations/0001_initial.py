# Generated by Django 3.0.7 on 2020-07-28 17:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Competence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('title', models.CharField(max_length=150, verbose_name='Наименование')),
                ('code', models.CharField(max_length=8, verbose_name='Код компетенции')),
            ],
        ),
        migrations.CreateModel(
            name='DigitalResource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID ресурса')),
                ('title', models.CharField(max_length=150, verbose_name='Наименование')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('type', models.CharField(choices=[('0', 'Онлайн-курс'), ('1', 'ЭУК'), ('2', 'Текстовый электронный образовательный ресурс'), ('3', 'Мультимедийный электронный образовательный ресурс')], max_length=30, null=True, verbose_name='Тип ресурса')),
                ('source_data', models.CharField(choices=[('0', ''), ('1', 'вручную'), ('2', 'импорт')], default='0', max_length=30, null=True, verbose_name='Источник данных')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('ketwords', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ключевые слова')),
                ('description', models.TextField(blank=True, max_length=500, null=True, verbose_name='Описание')),
            ],
        ),
        migrations.CreateModel(
            name='DigitalResourceCompetence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competence', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repository.Competence')),
                ('digital_resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.DigitalResource')),
            ],
        ),
        migrations.CreateModel(
            name='EduProgram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Описание')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Созданно')),
                ('short_description', models.CharField(blank=True, max_length=300, null=True, verbose_name='Короткое описание')),
                ('title', models.CharField(max_length=150, verbose_name='Наименование')),
            ],
        ),
        migrations.CreateModel(
            name='ExpertiseStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обнолвение')),
                ('end_date', models.DateTimeField(verbose_name='Срок действия')),
                ('status', models.CharField(choices=[('0', 'не инициирована'), ('1', 'подана заявка'), ('2', 'на экспертизе'), ('3', 'на доработку'), ('4', 'присвоен статус')], default='0', max_length=30, verbose_name='Состояние экспертизы')),
                ('accepted_status', models.BooleanField(default=False, verbose_name='Утверждено (присвоен статус)')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4, verbose_name='Код языка')),
                ('titile', models.CharField(max_length=80, verbose_name='Наименование')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обнолвение')),
                ('description', models.TextField(blank=True, max_length=500, null=True, verbose_name='Описание')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='upload/images/', verbose_name='Логотип')),
                ('contacts', models.TextField(blank=True, max_length=500, null=True, verbose_name='Контакты')),
                ('title', models.CharField(max_length=150, verbose_name='Наименование')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Созданно')),
                ('url', models.URLField(blank=True, null=True, verbose_name='URL')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=150, null=True, verbose_name='Адрес проживания')),
                ('date_birthday', models.DateTimeField(blank=True, null=True, verbose_name='Дата рождения')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Город')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('middle_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Страна')),
                ('first_name', models.CharField(max_length=45, verbose_name='Имя')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='upload/images/', verbose_name='Изображение профиля')),
                ('last_name', models.CharField(max_length=100, verbose_name='Отчество')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('url', models.URLField(verbose_name='Ссылка')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='upload/images/', verbose_name='Логотп')),
                ('description', models.TextField(blank=True, max_length=500, null=True, verbose_name='Описание')),
                ('contacts', models.TextField(blank=True, max_length=500, null=True, verbose_name='Контакты')),
                ('title', models.CharField(max_length=150, verbose_name='Наимаенование')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, max_length=500, null=True, verbose_name='Описание')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('title', models.CharField(max_length=100, verbose_name='Наименование')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обнолвение')),
                ('labor', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Трудоемкость')),
            ],
        ),
        migrations.CreateModel(
            name='ThematicPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('title', models.CharField(max_length=50, verbose_name='Наименование')),
                ('edu_programs', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repository.EduProgram')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repository.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectTheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, max_length=500, null=True, verbose_name='Описание')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('title', models.CharField(max_length=150, verbose_name='Наимаенование')),
                ('thematic_plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repository.ThematicPlan')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_group', models.CharField(max_length=30, verbose_name='Академическая группа')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person')),
            ],
        ),
        migrations.CreateModel(
            name='StatusCOR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('quality_category', models.CharField(blank=True, choices=[('0', 'внутренний'), ('1', 'внешний'), ('2', 'сторонний')], max_length=30)),
                ('interactive_category', models.CharField(blank=True, choices=[('0', 'не интерактивный'), ('1', 'с поддержкой преподавателя'), ('2', 'автоматизированный')], max_length=30)),
                ('expertise_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.ExpertiseStatus')),
            ],
        ),
        migrations.CreateModel(
            name='ResultEdu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Наименование')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Созданно')),
                ('description', models.TextField(max_length=500, verbose_name='Описание')),
                ('digital_resource_competence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.DigitalResourceCompetence')),
            ],
        ),
        migrations.CreateModel(
            name='ProvidingDiscipline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveIntegerField(verbose_name='Процент покрытия')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('edu_program', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repository.EduProgram')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repository.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='EduProgramTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.EduProgram')),
            ],
        ),
        migrations.AddField(
            model_name='digitalresource',
            name='authors',
            field=models.ManyToManyField(blank=True, related_name='authors_digital_resource', to='repository.Person', verbose_name='Авторы'),
        ),
        migrations.AddField(
            model_name='digitalresource',
            name='copyright_holder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repository.Organization'),
        ),
        migrations.AddField(
            model_name='digitalresource',
            name='edu_programs_tags',
            field=models.ManyToManyField(to='repository.EduProgramTag'),
        ),
        migrations.AddField(
            model_name='digitalresource',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repository.Language'),
        ),
        migrations.AddField(
            model_name='digitalresource',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='owner_digital_resource', to='repository.Person'),
        ),
        migrations.AddField(
            model_name='digitalresource',
            name='platform',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repository.Platform'),
        ),
        migrations.AddField(
            model_name='digitalresource',
            name='provided_disciplines',
            field=models.ManyToManyField(to='repository.ProvidingDiscipline'),
        ),
        migrations.AddField(
            model_name='digitalresource',
            name='status_cor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.StatusCOR'),
        ),
        migrations.AddField(
            model_name='digitalresource',
            name='subjects_tags',
            field=models.ManyToManyField(to='repository.SubjectTag'),
        ),
        migrations.CreateModel(
            name='ConformityTheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('practice', models.NullBooleanField(verbose_name='Практика')),
                ('theory', models.NullBooleanField(verbose_name='Теория')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('providing_discipline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.ProvidingDiscipline')),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.SubjectTheme')),
            ],
        ),
    ]
