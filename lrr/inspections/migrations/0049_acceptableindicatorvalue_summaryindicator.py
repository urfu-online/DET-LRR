# Generated by Django 3.2.16 on 2022-10-26 08:00

import auto_prefetch
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import uuid


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SummaryIndicator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('entity', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='КУРС_ЭОР')),
                ('location', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Внеш_Внутр')),
                ('interaction', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Тип интерактивности (Автоматизированный/Не интерактивный/С участием преподавателя)')),
                ('compliance', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Соответствие содержанию дисциплины')),
                ('per_discipline', models.BooleanField(default=False, verbose_name='Для каждой дисциплины (Полностью/Частично)')),
                ('rating', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True, verbose_name='Рейтинг')),
                ('have_conflicts', models.BooleanField(default=False, verbose_name='Имеются противоречия')),
                ('indicator', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inspections.indicator', verbose_name='Показатель')),
                ('request', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inspections.request', verbose_name='Заявка')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='AcceptableIndicatorValue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('value', models.CharField(blank=True, max_length=256, null=True, verbose_name='Значение показателя')),
                ('entity', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='КУРС_ЭОР')),
                ('location', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Внеш_Внутр')),
                ('interaction', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Тип интерактивности (Автоматизированный/Не интерактивный/С участием преподавателя)')),
                ('compliance', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Соответствие содержанию дисциплины')),
                ('per_discipline', models.BooleanField(default=False, verbose_name='Для каждой дисциплины (Полностью/Частично)')),
                ('rating', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True, verbose_name='Рейтинг')),
                ('indicator', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inspections.indicator', verbose_name='Показатель')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
