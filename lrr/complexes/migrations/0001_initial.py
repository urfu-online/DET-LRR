# Generated by Django 3.1.4 on 2021-02-04 08:24

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AssignmentAcademicGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('learn_date', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Учебный год')),
                ('semestr', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Семестр')),
            ],
            options={
                'verbose_name': 'Ресурсное обеспечение академической группы',
                'verbose_name_plural': 'Ресурсное обеспечение академических групп',
            },
        ),
        migrations.CreateModel(
            name='Cell',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('type', models.CharField(choices=[('ASYNC', 'асинхронные мероприятия'), ('SYNC', 'синхронные мероприятия')], max_length=50, null=True, verbose_name='Тип ячейки')),
                ('include_practice', models.BooleanField(blank=True, null=True, verbose_name='Практика')),
                ('include_theory', models.BooleanField(blank=True, null=True, verbose_name='Теория')),
                ('beg_theme_number', models.PositiveSmallIntegerField(blank=True, verbose_name='Начало диапазонов объединяемых строчек')),
                ('end_theme_number', models.PositiveSmallIntegerField(blank=True, verbose_name='Конец диапазонов объединяемых строчек')),
                ('methodology_description', models.CharField(blank=True, max_length=1024, verbose_name='Методологическое описание')),
            ],
            options={
                'verbose_name': 'Ячейка цифрового комплекса ЭУМК',
                'verbose_name_plural': 'Ячейки цифрового комплекса ЭУМК',
            },
        ),
        migrations.CreateModel(
            name='CellWeeks',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('beg_week_number', models.PositiveSmallIntegerField(blank=True, verbose_name='Начало диапазона недель учебного графика ячейки')),
                ('end_week_number', models.PositiveSmallIntegerField(blank=True, verbose_name='Конец диапазона недель учебного графика ячейки')),
                ('edu_form', models.CharField(blank=True, max_length=150, verbose_name='Форма обучения для которой сотавлен график')),
            ],
            options={
                'verbose_name': 'Неделя календарного учебного графика',
                'verbose_name_plural': 'Недели календарного учебного графика',
            },
        ),
        migrations.CreateModel(
            name='ComplexSpaceCell',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('title', models.CharField(max_length=150, verbose_name='Наимаенование')),
                ('description', models.TextField(max_length=300, verbose_name='Описание')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Ссылка на образовательное пространство')),
            ],
            options={
                'verbose_name': 'Компонент ячейки комплекса',
                'verbose_name_plural': 'Компоненты ячеек комплекса',
            },
        ),
        migrations.CreateModel(
            name='ComplexTheme',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('title', models.CharField(max_length=150, verbose_name='Наимаенование')),
                ('number', models.PositiveSmallIntegerField(blank=True, verbose_name='Номер темы')),
            ],
            options={
                'verbose_name': 'Тема карты комплекса',
                'verbose_name_plural': 'Темы карты комплекса',
            },
        ),
        migrations.CreateModel(
            name='ComponentComplex',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('description', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Описание / Методика применения')),
            ],
            options={
                'verbose_name': 'компонент комплекса',
                'verbose_name_plural': 'компоненты комплексов',
            },
        ),
        migrations.CreateModel(
            name='DigitalComplex',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('title', models.CharField(blank=True, max_length=150, null=True, verbose_name='Наименогвание комплекса')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('format', models.CharField(blank=True, max_length=300, verbose_name='Формат использования')),
                ('keywords', models.CharField(blank=True, max_length=300, null=True, verbose_name='Ключевые слова')),
            ],
            options={
                'verbose_name': 'Цифровой Комплекс (ЭУМК)',
                'verbose_name_plural': 'Цифровые Комплексы (ЭУМК)',
            },
        ),
        migrations.CreateModel(
            name='RegistryStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('experise_date', models.DateTimeField(blank=True, verbose_name='Дата экспертизы')),
                ('relevance_date', models.DateTimeField(blank=True, verbose_name='Дата обновления экспертизы')),
            ],
            options={
                'verbose_name': 'Статус экспертизы комплекса',
                'verbose_name_plural': 'Статусы экспертизы комплекса',
            },
        ),
        migrations.CreateModel(
            name='RegistryStatusProgSubject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последние обновление')),
                ('coverage_procentage', models.PositiveSmallIntegerField(blank=True, verbose_name='Процент покрытия')),
            ],
            options={
                'verbose_name': 'Соответсвие статуса комплекса, с дисциплинами и программами',
                'verbose_name_plural': 'Соответсвие статуса комплекса, с дисциплинами и программами',
            },
        ),
        migrations.CreateModel(
            name='LiterarySourcesComponent',
            fields=[
                ('componentcomplex_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='complexes.componentcomplex')),
            ],
            options={
                'abstract': False,
            },
            bases=('complexes.componentcomplex',),
        ),
        migrations.CreateModel(
            name='PlatformComponent',
            fields=[
                ('componentcomplex_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='complexes.componentcomplex')),
            ],
            options={
                'verbose_name': 'Компонент платформы',
                'verbose_name_plural': 'Компоненты платформ',
            },
            bases=('complexes.componentcomplex',),
        ),
        migrations.CreateModel(
            name='ResourceComponent',
            fields=[
                ('componentcomplex_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='complexes.componentcomplex')),
            ],
            options={
                'verbose_name': 'Компонент ЭОР',
                'verbose_name_plural': 'Компоненты ЭОР',
            },
            bases=('complexes.componentcomplex',),
        ),
        migrations.CreateModel(
            name='TraditionalSessionComponent',
            fields=[
                ('componentcomplex_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='complexes.componentcomplex')),
                ('title', models.CharField(blank=True, max_length=150, verbose_name='Наименование вида занятий')),
                ('description_session', models.TextField(blank=True, max_length=2024, verbose_name='Описание занятий')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Ссылка на онлайн-расписание занятий')),
            ],
            options={
                'verbose_name': 'компонент традиционных занятий',
                'verbose_name_plural': 'компоненты традиционных занятий',
            },
            bases=('complexes.componentcomplex',),
        ),
    ]
