# Generated by Django 4.1.7 on 2023-03-15 18:42

import auto_prefetch
import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("taggit", "0005_auto_20220424_2025"),
    ]

    operations = [
        migrations.CreateModel(
            name="AssignmentAcademicGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "last_updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Последние обновление"
                    ),
                ),
                (
                    "learn_date",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Учебный год"
                    ),
                ),
            ],
            options={
                "verbose_name": "ресурсное обеспечение академической группы",
                "verbose_name_plural": "ресурсное обеспечение академических групп",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ComplexParentComponent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "last_updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Последние обновление"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Как используется при изучении дисциплины",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Порядрок отображения компонента",
                    ),
                ),
            ],
            options={
                "verbose_name": "компонент комплекса",
                "verbose_name_plural": "компоненты комплексов",
                "ordering": ["order"],
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="DigitalComplex",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "last_updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Последние обновление"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=150,
                        null=True,
                        verbose_name="Наименование комплекса",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Описание"),
                ),
                (
                    "format",
                    models.CharField(
                        choices=[
                            ("-", "Не определено"),
                            ("0", "смешанное обучение (Ауд+Дист+ЭИОС)"),
                            ("1", "смешанное обучение (Ауд+Дист)"),
                            ("2", "смешанное обучение (Ауд+ЭИОС)"),
                            ("3", "дистанционное обучение (Дист+ЭИОС)"),
                            ("4", "дистанционное обучение (Дист)"),
                            ("5", "исключительно электронное обучение"),
                            ("6", "традиционное обучение"),
                        ],
                        default="-",
                        max_length=1,
                        verbose_name="Формат использования",
                    ),
                ),
                (
                    "form_control",
                    models.CharField(
                        choices=[
                            ("-", "Не определено"),
                            ("0", "зачет"),
                            ("1", "экзамен "),
                        ],
                        default="-",
                        max_length=1,
                        verbose_name="Форма контроля",
                    ),
                ),
            ],
            options={
                "verbose_name": "цифровой Комплекс (ЭУМК)",
                "verbose_name_plural": "цифровые Комплексы (ЭУМК)",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ThematicPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "last_updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Последние обновление"
                    ),
                ),
                (
                    "plan_object",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Объект плана"
                    ),
                ),
                (
                    "digital_complex",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="thematic_plan",
                        to="complexes.digitalcomplex",
                        verbose_name="Цифровой Комплекс (ЭУМК)",
                    ),
                ),
            ],
            options={
                "verbose_name": "структурно-тематический план",
                "verbose_name_plural": "структурно-тематические планы",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="LiterarySourcesComponent",
            fields=[
                (
                    "complexparentcomponent_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="complexes.complexparentcomponent",
                    ),
                ),
                (
                    "title",
                    models.TextField(
                        blank=True, null=True, verbose_name="Библиографическая ссылка"
                    ),
                ),
                ("url", models.URLField(blank=True, null=True, verbose_name="URL")),
            ],
            options={
                "verbose_name": "литературный источник",
                "verbose_name_plural": "литературные источники",
            },
            bases=("complexes.complexparentcomponent",),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="PlatformComponent",
            fields=[
                (
                    "complexparentcomponent_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="complexes.complexparentcomponent",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Наименование"
                    ),
                ),
                (
                    "description_self",
                    models.TextField(blank=True, null=True, verbose_name="Описание"),
                ),
                (
                    "url",
                    models.URLField(
                        blank=True,
                        null=True,
                        verbose_name="Ссылка на онлайн-расписание занятий",
                    ),
                ),
            ],
            options={
                "verbose_name": "среда обучения",
                "verbose_name_plural": "среда обучения",
            },
            bases=("complexes.complexparentcomponent",),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ResourceComponent",
            fields=[
                (
                    "complexparentcomponent_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="complexes.complexparentcomponent",
                    ),
                ),
            ],
            options={
                "verbose_name": "компонент ЭОР",
                "verbose_name_plural": "компоненты ЭОР",
            },
            bases=("complexes.complexparentcomponent",),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="TraditionalSessionComponent",
            fields=[
                (
                    "complexparentcomponent_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="complexes.complexparentcomponent",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        verbose_name="Наименование вида занятий",
                    ),
                ),
                (
                    "description_session",
                    models.TextField(
                        blank=True, null=True, verbose_name="Описание занятий"
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        blank=True,
                        null=True,
                        verbose_name="Ссылка на онлайн-расписание занятий",
                    ),
                ),
            ],
            options={
                "verbose_name": "синхронное занятие",
                "verbose_name_plural": "синхронные занятия",
            },
            bases=("complexes.complexparentcomponent",),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="UUIDTaggedItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "object_id",
                    models.UUIDField(db_index=True, verbose_name="object ID"),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_tagged_items",
                        to="contenttypes.contenttype",
                        verbose_name="content type",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_items",
                        to="taggit.tag",
                    ),
                ),
            ],
            options={
                "verbose_name": "тег",
                "verbose_name_plural": "теги",
            },
        ),
        migrations.CreateModel(
            name="Theme",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(db_index=True, max_length=64)),
                ("order", models.PositiveSmallIntegerField(default=0)),
                (
                    "thematic_plan",
                    auto_prefetch.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="themes",
                        to="complexes.thematicplan",
                    ),
                ),
            ],
            options={
                "verbose_name": "тема",
                "verbose_name_plural": "темы структурно-тематического плана",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="PlanComponent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("UNKNOWN", "не определено"),
                            ("ASYNC", "асинхронные мероприятия"),
                            ("SYNC", "синхронные мероприятия"),
                        ],
                        max_length=7,
                        null=True,
                        verbose_name="Тип",
                    ),
                ),
                (
                    "methodology_description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Методологическое описание"
                    ),
                ),
                (
                    "content",
                    models.JSONField(
                        blank=True,
                        null=True,
                        verbose_name="Содержимое ячейки структурно-тематического плана",
                    ),
                ),
                (
                    "week_range",
                    django.contrib.postgres.fields.ranges.IntegerRangeField(
                        blank=True, null=True, verbose_name="Диапазон"
                    ),
                ),
                (
                    "thematic_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="complexes.thematicplan",
                    ),
                ),
            ],
            options={
                "verbose_name": "компонент",
                "verbose_name_plural": "компоненты структурно-тематического плана",
            },
        ),
    ]
